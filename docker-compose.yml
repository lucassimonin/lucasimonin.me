version: '3.5'
networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.6.0.0/16
services:
  certbot:
    build:
      context: "docker/certbot"
      args:
        UID: ${UID}
        GUID: ${GUID}
    volumes:
      - "./:/srv:cached"

  database:
    image: mysql:8.0
    volumes:
    - ./docker/database:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
    - '3306:3306'
    environment:
    - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      app_network:
        ipv4_address: 10.6.0.3

  front:
    build:
      context: "docker/front"
      args:
        UID: ${UID}
        GUID: ${GUID}
    volumes:
      - "./:/srv"

  quality:
    command: tail -f /dev/null
    image: mykiwi/phaudit:7.3
    volumes:
      - "./:/project"

  language:
    build:
      context: "docker/php"
      args:
        UID: ${UID}
        GUID: ${GUID}
        XDEBUG: ${XDEBUG}
    expose:
      - '9000'
    volumes:
      - "./:/srv:cached"
    networks:
      app_network:
        ipv4_address: 10.6.0.6
    extra_hosts:
      - "${APP_SERVER_NAME}.local:10.6.0.5"


  mailing:
    image: mailhog/mailhog
    expose:
      - '1025'
    ports:
      - '8025:8025'
    networks:
      app_network:
        ipv4_address: 10.6.0.4

  redis:
    image: redis:4.0.11-alpine3.8
    ports:
      - '6379:6379'
    networks:
      app_network:
        ipv4_address: 10.6.0.7

  server:
    image: openresty/openresty
    environment:
      APP_SERVER_NAME: ${APP_SERVER_NAME}
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - "./docker/nginx/cert:/etc/cert"
      - "./docker/nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf"
      - "./docker/nginx/hosts/vhost.conf:/etc/nginx/site-enabled/default.conf"
      - "./docker/nginx/conf/${SSL_FILE}:/etc/nginx/conf.d/ssl.conf"
      - "./docker/nginx/conf/ssl.conf:/etc/nginx/conf.d/base_ssl.conf"
      - "./docker/nginx/conf/fastcgi.conf:/etc/nginx/conf.d/fastcgi.conf"
      - "./docker/nginx/conf/symfony.conf:/etc/nginx/conf.d/symfony.conf"
      - "./public:/srv/public:cached"
      - "./logs:/srv/logs"
    networks:
      app_network:
        ipv4_address: 10.6.0.5

  sonarqube:
    image: sonarqube:7.4-community
    ports:
      - '9000:9000'
    environment:
      SONARQUBE_JDBC_USERNAME: sonar
      SONARQUBE_JDBC_PASSWORD: sonar
      SONARQUBE_JDBC_URL: 'jdbc:postgresql://postgres/sonar'
    networks:
      app_network:
        ipv4_address: 10.6.0.8

  sonarscanner:
    build:
      context: "docker/sonarqube-scanner"
    ports:
      - '9002:9002'
    volumes:
      - "./:/root/src"
    networks:
      app_network:
        ipv4_address: 10.6.0.9

  postgres:
    image: postgres:9.6-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: sonar
      POSTGRES_USER: sonar
    networks:
      app_network:
        ipv4_address: 10.6.0.10
